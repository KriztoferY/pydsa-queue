[options]
include_package_data = True
package_dir =
    =src
packages = find_namespace:

[options.packages.find]
where = src

[mypy]
ignore_missing_imports = True

[tox:tox]
min_version = 4.0
isolated_build = true
env_list = py311, py310, py39, py38, py37, type, format, lint, build

[coverage:run]
# uncomment the following to omit files during running
#omit =

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    def main

[gh-actions]
python =
    3.11: py311, type, format, lint, build
    3.10: py310
    3.9: py39
    3.8: py38
    3.7: py37
    3.6: py36

[testenv]
deps = pytest
allowlist_externals = pytest
extras =
    test
passenv = *
setenv =
    PYTHONPATH = {toxinidir}
    PYTHONWARNINGS = ignore
commands =
    pytest --cov=pydsa-queue --cov-branch --cov-report=xml --cov-report=term-missing tests

[testenv:format]
allowlist_externals =
    isort
    black
extras =
    test
commands =
    isort pydsa-queue
    black pydsa-queue tests

[testenv:type]
deps = mypy
commands = mypy src

[testenv:lint]
allowlist_externals =
    flake8
    mypy
extras =
    test
commands =
    flake8 pydsa-queue tests
    mypy pydsa-queue tests

[testenv:build]
allowlist_externals =
    build
    mkdocs
    twine
extras =
    doc
    dev
commands =
    build
    mkdocs build
    twine check dist/*
